4.1 - public class BinarySearchRecursive {

          // Método principal para busca binária recursiva
          public static int binarySearch(int[] array, int target) {
              return binarySearchRecursive(array, target, 0, array.length - 1);
          }

          // Método recursivo que realiza a busca binária
          private static int binarySearchRecursive(int[] array, int target, int low, int high) {
              // Caso base: Se o intervalo é inválido, o elemento não está na lista
              if (low > high) {
                  return -1; // Elemento não encontrado
              }

              // Calcula o índice do meio
              int mid = low + (high - low) / 2;

              // Verifica se o elemento no meio é o valor alvo
              if (array[mid] == target) {
                  return mid; // Retorna o índice se o elemento foi encontrado
              }

              // Se o valor alvo é menor que o valor no meio, busca na metade inferior
              else if (target < array[mid]) {
                  return binarySearchRecursive(array, target, low, mid - 1);
              }

              // Se o valor alvo é maior, busca na metade superior
              else {
                  return binarySearchRecursive(array, target, mid + 1, high);
              }
          }

          // Exemplo de uso
          public static void main(String[] args) {
              int[] sortedArray = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19};
              int target = 7;

              int result = binarySearch(sortedArray, target);
              if (result != -1) {
                  System.out.println("Elemento encontrado no índice: " + result);
              } else {
                  System.out.println("Elemento não encontrado.");
              }
          }
      }

4.3 - Busca sequencial modificada simples em um array de inteiros:
public int search(int[] array, int value) {
2 for(int i = 0; i < array.length; i++) {
3 if(array[i] == value)
4 return i;
5 if(array[i] < value)
6 return -1;
7 }
8 return -1;
9 }

Busca sequencial modificada genérica em uma lista:
public int indexOf_sorted(List<E> list, E value) {
2 for(int i = 0; i < list.size(); i++) {
3 if(comp.compare(list.get(i), value) == 0)
4 return i;
5 if(comp.compare(list.get(i), value) < 0)
6 return -1;
7 }
8
9 return -1;
10 }
